name: Faleproxy CI/CD

on:
  push:
    branches: [ main, master, feature/** ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_TOKEN: 7qKvvY2icxylxWOG6SZAtEME
  VERCEL_ORG_ID: todds-projects-d1dca245
  VERCEL_PROJECT_ID: prj_B9dtqAkOLZ65JYga60K1rTm3H1Ep

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        
  preview-deploy:
    needs: test
    if: success() && startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Deploy to Vercel (Preview)
      run: |
        vercel deploy --token=$VERCEL_TOKEN --scope=$VERCEL_ORG_ID --confirm
        
  production-deploy:
    needs: test
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Deploy to Vercel (Production)
      run: |
        vercel deploy --token=$VERCEL_TOKEN --scope=$VERCEL_ORG_ID --prod --confirm
